module "SRV-Mi2Analyst1" {
  #source = "../../modules/terraform-azurerm_linux_virtual_machine"
  source         = "github.com/canada-ca-terraform-modules/terraform-azurerm_linux_virtual_machine?ref=20200610.1"
  deploy         = var.vm_configs.SRV-Mi2Analyst1.deploy
  name           = "${var.env}SRV-Mi2Analyst1"
  resource_group = data.azurerm_resource_group.Project-rg
  location       = var.location
  storage_image_reference = {
    publisher = "RedHat",
    offer     = "RHEL",
    sku       = "7-LVM",
    version   = "7.7.2020031212"
  }
  nic_subnetName          = data.azurerm_subnet.Project_OZ-snet.name
  nic_vnetName            = data.azurerm_subnet.Project_OZ-snet.virtual_network_name
  nic_resource_group_name = data.azurerm_subnet.Project_OZ-snet.resource_group_name
  nic_ip_configuration = {
    private_ip_address            = [local.SRV-Mi2Analyst1]
    private_ip_address_allocation = ["Static"]
  }
  admin_username       = var.vm_configs.SRV-Mi2Analyst1.admin_username
  admin_password       = var.vm_configs.SRV-Mi2Analyst1.admin_password
  os_managed_disk_type = var.vm_configs.SRV-Mi2Analyst1.os_managed_disk_type
  vm_size              = var.vm_configs.SRV-Mi2Analyst1.vm_size
  encryptDisks = {
    KeyVaultResourceId = azurerm_key_vault.Project-kv.id
    KeyVaultURL        = azurerm_key_vault.Project-kv.vault_uri
  }
  monitoringAgent = data.azurerm_log_analytics_workspace.Project-law
  dependancyAgent = true
  public_ip       = false
  tags            = var.tags
}

resource "azurerm_dns_a_record" "SRV-Mi2Analyst1" {
  count               = var.vm_configs.SRV-Mi2Analyst1.deploy ? 1 : 0
  zone_name           = data.azurerm_dns_zone.zone1.name
  name                = lower("${var.env}SRV-Mi2Analyst1")
  ttl                 = "60"
  records             = [module.SRV-Mi2Analyst1.nic[0].private_ip_address]
  resource_group_name = data.azurerm_resource_group.DNS-rg.name
}
